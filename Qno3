Q3. What are loops, and what do we need them? Explain different types of loops with their syntax and
examples.
->
Loops are fundamental programming constructs used to execute a block of code repeatedly based on a condition. They are essential for tasks that involve iterating over a set of values, processing data in bulk, or performing repetitive operations. Hereâ€™s a rundown of the common types of loops in JavaScript, including their syntax and examples:

### 1. **For Loop**

**Syntax:**
```javascript
for (initialization; condition; update) {
    // Code to be executed
}
```

**Example:**
```javascript
for (let i = 0; i < 5; i++) {
    console.log(i);
}
```
**Explanation:** This loop initializes `i` to 0. It runs as long as `i` is less than 5, and increments `i` by 1 after each iteration. The output will be `0 1 2 3 4`.

### 2. **While Loop**

**Syntax:**
```javascript
while (condition) {
    // Code to be executed
}
```

**Example:**
```javascript
let i = 0;
while (i < 5) {
    console.log(i);
    i++;
}
```
**Explanation:** This loop continues to execute as long as `i` is less than 5. It prints `i` and then increments it. The output will be `0 1 2 3 4`.

### 3. **Do...While Loop**

**Syntax:**
```javascript
do {
    // Code to be executed
} while (condition);
```

**Example:**
```javascript
let i = 0;
do {
    console.log(i);
    i++;
} while (i < 5);
```
**Explanation:** This loop executes the code block once before checking the condition. It then continues to execute as long as `i` is less than 5. The output will be `0 1 2 3 4`.

### 4. **For...In Loop**

**Syntax:**
```javascript
for (variable in object) {
    // Code to be executed
}
```

**Example:**
```javascript
const person = {name: 'Alice', age: 25, city: 'Wonderland'};
for (const key in person) {
    console.log(key + ': ' + person[key]);
}
```
**Explanation:** This loop iterates over the enumerable properties of an object. It prints each property key and its corresponding value. The output will be:
```
name: Alice
age: 25
city: Wonderland
```

### 5. **For...Of Loop**

**Syntax:**
```javascript
for (variable of iterable) {
    // Code to be executed
}
```

**Example:**
```javascript
const numbers = [1, 2, 3, 4, 5];
for (const number of numbers) {
    console.log(number);
}
```
**Explanation:** This loop iterates over iterable objects (e.g., arrays). It prints each element in the array. The output will be `1 2 3 4 5`.

### Use Cases for Loops

- **Iterating through Arrays:** To perform operations on each element.
- **Repeating Actions:** For tasks like generating repeated HTML content or performing repetitive calculations.
- **Data Processing:** For analyzing or transforming collections of data.

Loops provide a powerful way to automate repetitive tasks and handle collections of data efficiently.